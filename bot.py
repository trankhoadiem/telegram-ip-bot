import requests
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# ==== TOKEN ====
TOKEN = 'YOUR_BOT_TOKEN'  # Thay 'YOUR_BOT_TOKEN' b·∫±ng token th·∫≠t c·ªßa b·∫°n

# ==== Snaptik Downloader ====
def download_tiktok(url):
    try:
        download_url = f"https://snaptik.vn/api/download?url={url}"
        res = requests.get(download_url)
        if res.status_code == 200:
            return res.text  # Ho·∫∑c URL t·∫£i v·ªÅ
        else:
            return "‚ùå Kh√¥ng t·∫£i ƒë∆∞·ª£c video TikTok."
    except Exception as e:
        return f"‚ö†Ô∏è L·ªói khi t·∫£i video TikTok: {e}"

# ==== YouTube Downloader ====
def download_youtube(url):
    try:
        download_url = f"https://y2-mate.download/yt?url={url}"
        res = requests.get(download_url)
        if res.status_code == 200:
            return res.text  # Ho·∫∑c URL t·∫£i v·ªÅ
        else:
            return "‚ùå Kh√¥ng t·∫£i ƒë∆∞·ª£c video YouTube."
    except Exception as e:
        return f"‚ö†Ô∏è L·ªói khi t·∫£i video YouTube: {e}"

# ==== SoundCloud Downloader ====
def download_soundcloud(url):
    try:
        download_url = f"https://taivideoaz.com/tai-nhac-soundcloud/?url={url}"
        res = requests.get(download_url)
        if res.status_code == 200:
            return res.text  # Ho·∫∑c URL t·∫£i v·ªÅ
        else:
            return "‚ùå Kh√¥ng t·∫£i ƒë∆∞·ª£c nh·∫°c t·ª´ SoundCloud."
    except Exception as e:
        return f"‚ö†Ô∏è L·ªói khi t·∫£i nh·∫°c: {e}"

# ==== Start Command ====
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "‚ú® **Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi BOT** ‚ú®\n\n"
        "ü§ñ C√¥ng c·ª• t·∫£i video YouTube, TikTok v√† nh·∫°c SoundCloud!\n\n"
        "üí° G√µ /help ƒë·ªÉ xem l·ªánh kh·∫£ d·ª•ng."
    )

# ==== Help Command ====
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üìñ L·ªánh c√≥ s·∫µn:\n\n"
        "/start - B·∫Øt ƒë·∫ßu\n"
        "/help - Tr·ª£ gi√∫p\n"
        "/sc <link> - T·∫£i nh·∫°c t·ª´ SoundCloud\n"
        "/yt <link> - T·∫£i video t·ª´ YouTube\n"
        "/tiktok <link> - T·∫£i video t·ª´ TikTok"
    )

# ==== Download SoundCloud ====
async def download_music(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("üëâ D√πng: /sc <link SoundCloud>")
        return
    link = context.args[0].strip()
    result = download_soundcloud(link)
    await update.message.reply_text(result)

# ==== Download YouTube ====
async def download_video(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("üëâ D√πng: /yt <link YouTube>")
        return
    link = context.args[0].strip()
    result = download_youtube(link)
    await update.message.reply_text(result)

# ==== Download TikTok ====
async def download_tiktok_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not context.args:
        await update.message.reply_text("üëâ D√πng: /tiktok <link TikTok>")
        return
    link = context.args[0].strip()
    result = download_tiktok(link)
    await update.message.reply_text(result)

# ==== Main ==== 
def main():
    app = Application.builder().token(TOKEN).build()

    # Commands
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(CommandHandler("sc", download_music))  # SoundCloud
    app.add_handler(CommandHandler("yt", download_video))  # YouTube
    app.add_handler(CommandHandler("tiktok", download_tiktok_handler))  # TikTok

    app.run_polling()

if __name__ == "__main__":
    main()
